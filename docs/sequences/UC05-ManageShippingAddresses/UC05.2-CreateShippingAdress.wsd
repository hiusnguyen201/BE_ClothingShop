@startuml Create Shipping Address

actor Client

participant ShippingAddressController
participant ModelDto
participant RequestValidation
participant GhnService
participant ShippingAddressService
participant GhnAPI
participant ShippingAddressModel

database MongoDB

' Step 1
    activate Client
    Client -> ShippingAddressController: POST /api/shipping-address/create-shipping-address
    activate ShippingAddressController


' Step 4
group Validation Flow
    ShippingAddressController -> RequestValidation: validateSchema(createShippingAddressDto)
    activate RequestValidation
    alt validation error
        RequestValidation --x RequestValidation: throw HttpException(400)
        RequestValidation --x ShippingAddressController: throw HttpException(400)
        ShippingAddressController -->> Client: HTTP 400 Bad Request
    end
    RequestValidation -->> ShippingAddressController: return valid data
    deactivate RequestValidation
end

break
break


' Step 5
group Business Logic Flow
    ShippingAddressController -> ShippingAddressService: countAllShippingAddressService(filters)
    activate ShippingAddressService
    ShippingAddressService -> ShippingAddressModel: countDocuments(filters)
    activate ShippingAddressModel
    ShippingAddressModel -> MongoDB: query count
    activate MongoDB

    alt count fail 
        MongoDB --x ShippingAddressModel: throw Error
        ShippingAddressModel --x ShippingAddressService: throw Error
        ShippingAddressService --x ShippingAddressController: throw Error
        ShippingAddressController -->> Client: HTTP 500 Server Error
    end

    MongoDB -->> ShippingAddressModel: return totalCount
    deactivate MongoDB
    ShippingAddressModel -->> ShippingAddressService: return totalCount
    deactivate ShippingAddressModel
    ShippingAddressService -->> ShippingAddressController: return totalCount
    deactivate ShippingAddressService
    ShippingAddressController -> GhnService: getProvinceService(provinceCode)
    activate GhnService
    GhnService -> GhnAPI: GET /master-data/province
    activate GhnAPI

    alt get fail
        GhnAPI -->> GhnService: return null
        GhnService -->> ShippingAddressController: return null
        ShippingAddressController --x ShippingAddressController: throw(HttpException(404))
        ShippingAddressController -->> Client: HTTP 404 Not Found
    end

    GhnAPI -->> GhnService: return province
    deactivate GhnAPI
    GhnService -->> ShippingAddressController: return province   
    deactivate GhnService
    ShippingAddressController -> GhnService: getDistrictService(districtCode, provinceCode)
    activate GhnService
    GhnService -> GhnAPI: GET /master-data/district
    activate GhnAPI

    alt get fail
        GhnAPI -->> GhnService: return null
        GhnService -->> ShippingAddressController: return null
        ShippingAddressController --x ShippingAddressController: throw(HttpException(404))
        ShippingAddressController -->> Client: HTTP 404 Not Found
    end

    GhnAPI -->> GhnService: return district
    deactivate GhnAPI
    GhnService -->> ShippingAddressController: return district
    deactivate GhnService
    ShippingAddressController -> GhnService: getWardService(wardCode, districtCode)
    activate GhnService
    GhnService -> GhnAPI: GET /master-data/ward
    activate GhnAPI

    alt get fail
        GhnAPI -->> GhnService: return null
        GhnService -->> ShippingAddressController: return null
        ShippingAddressController --x ShippingAddressController: throw(HttpException(404))
        ShippingAddressController -->> Client: HTTP 404 Not Found
    end

    GhnAPI -->> GhnService: return ward
    deactivate GhnAPI
    GhnService -->> ShippingAddressController: return ward
    deactivate GhnService
    ShippingAddressController -> ShippingAddressService: createShippingAddressService()
    activate ShippingAddressService
    ShippingAddressService -> ShippingAddressModel: create()
    activate ShippingAddressModel
    ShippingAddressModel -> MongoDB: query insert
    activate MongoDB

    alt create fail 
        MongoDB --x ShippingAddressModel: throw Error
        ShippingAddressModel --x ShippingAddressService: throw Error
        ShippingAddressService --x ShippingAddressController: throw Error
        ShippingAddressController -->> Client: HTTP 500 Server Error
    end

    MongoDB -->> ShippingAddressModel: return newShippingAddress
    deactivate MongoDB
    ShippingAddressModel -->> ShippingAddressService: return newShippingAddress
    deactivate ShippingAddressModel
    ShippingAddressService -->> ShippingAddressController: return newShippingAddress
    deactivate ShippingAddressService
    

end

group Transform data response
    ShippingAddressController -> ModelDto: new(ShippingAddressDto)
    activate ModelDto
    ModelDto -->> ShippingAddressController: return ShippingAddressDto 
    deactivate ModelDto

ShippingAddressController --> Client: HTTP 200 Success
deactivate ShippingAddressController
end

@enduml