@startuml Update Shipping Address

actor Client

participant ShippingAddressController
participant ModelDto
participant RequestValidation
participant ApiResponse
participant ShippingAddressService
participant GhnService
participant QueryUtil
participant GhnAPI
participant ShippingAddressModel

database MongoDB

' Step 1
    activate Client
    Client -> ShippingAddressController: PUT /api/shipping-address/update-shipping-address-by-id/:shippingAddressId
    activate ShippingAddressController


' Step 4
group Validation Flow
    ShippingAddressController -> RequestValidation: validateSchema(updateShippingAddressDto)
    activate RequestValidation
    alt validation error
        RequestValidation --x RequestValidation: throw HttpException(400)
        RequestValidation --x ShippingAddressController: throw HttpException(400)
        ShippingAddressController -->> Client: HTTP 400 Bad Request
    end
    RequestValidation -->> ShippingAddressController: return valid data
    deactivate RequestValidation
end



' Step 5
group Business Logic Flow
    ShippingAddressController -> GhnService: getProvinceService(provinceCode)
    activate GhnService
    GhnService -> GhnAPI: GET /master-data/province
    activate GhnAPI

    alt get fail
        GhnAPI -->> GhnService: return null
        GhnService -->> ShippingAddressController: return null
        ShippingAddressController --x ShippingAddressController: throw(HttpException(404))
        ShippingAddressController -->> Client: HTTP 404 Not Found
    end

    GhnAPI -->> GhnService: return province
    deactivate GhnAPI
    GhnService -->> ShippingAddressController: return province   
    deactivate GhnService
    ShippingAddressController -> GhnService: getDistrictService(districtCode, provinceCode)
    activate GhnService
    GhnService -> GhnAPI: GET /master-data/district
    activate GhnAPI

    alt get fail
        GhnAPI -->> GhnService: return null
        GhnService -->> ShippingAddressController: return null
        ShippingAddressController --x ShippingAddressController: throw(HttpException(404))
        ShippingAddressController -->> Client: HTTP 404 Not Found
    end

    GhnAPI -->> GhnService: return district
    deactivate GhnAPI
    GhnService -->> ShippingAddressController: return district
    deactivate GhnService
    ShippingAddressController -> GhnService: getWardService(wardCode, districtCode)
    activate GhnService
    GhnService -> GhnAPI: GET /master-data/ward
    activate GhnAPI

    alt get fail
        GhnAPI -->> GhnService: return null
        GhnService -->> ShippingAddressController: return null
        ShippingAddressController --x ShippingAddressController: throw(HttpException(404))
        ShippingAddressController -->> Client: HTTP 404 Not Found
    end

    GhnAPI -->> GhnService: return ward
    deactivate GhnAPI
    GhnService -->> ShippingAddressController: return ward
    deactivate GhnService

    ShippingAddressController -> ShippingAddressService: getShippingAddressByIdService(shippingAddressId)
    activate ShippingAddressService
    
    
    ShippingAddressService -> ShippingAddressModel: findOne(filters)
    activate ShippingAddressModel
    ShippingAddressModel -> MongoDB: query select
    activate MongoDB

    alt select fail
        MongoDB --x ShippingAddressModel: throw Error
        ShippingAddressModel --x ShippingAddressService: throw Error
        ShippingAddressService --x ShippingAddressController: throw Error
        ShippingAddressController -->> Client: HTTP 500 Internal Server Error
    else shippingAddress not found
        MongoDB -->> ShippingAddressModel: return null
        ShippingAddressModel -->> ShippingAddressService: return null
        ShippingAddressService -->> ShippingAddressController: return null
        ShippingAddressController --x ShippingAddressController: Throw(HttpException(404))
        ShippingAddressController -->> Client: HTTP 404 Not Found
    end

    MongoDB -->> ShippingAddressModel: return shippingAddress
    deactivate MongoDB
    ShippingAddressModel -->> ShippingAddressService: return shippingAddress
    deactivate ShippingAddressModel
    ShippingAddressService -->> ShippingAddressController: return shippingAddress
    deactivate ShippingAddressService
    ShippingAddressController -> ShippingAddressService: updateShippingAddressByIdService()
    activate ShippingAddressService
    ShippingAddressService -> ShippingAddressModel: findByIdAndUpdate()
    activate ShippingAddressModel
    ShippingAddressModel -> MongoDB: query update
    activate MongoDB

    alt update fail
        MongoDB --x ShippingAddressModel: throw Error
        ShippingAddressModel --x ShippingAddressService: throw Error
        ShippingAddressService --x ShippingAddressController: throw Error
        ShippingAddressController -->> Client: HTTP 500 Internal Server Error
    end

    MongoDB -->> ShippingAddressModel: return shippingAddress
    deactivate MongoDB
    ShippingAddressModel -->> ShippingAddressService: return shippingAddress
    deactivate ShippingAddressModel
    ShippingAddressService -->> ShippingAddressController: return shippingAddress
    deactivate ShippingAddressService



end

group Transform data response
    ShippingAddressController -> ModelDto: new(ShippingAddressDto)
    activate ModelDto
    ModelDto -->> ShippingAddressController: return ShippingAddressDto 
    deactivate ModelDto

ShippingAddressController --> Client: HTTP 200 Success
deactivate ShippingAddressController
end

@enduml