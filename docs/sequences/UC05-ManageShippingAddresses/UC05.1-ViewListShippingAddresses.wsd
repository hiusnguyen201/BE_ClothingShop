@startuml View List Shipping Address

actor Client

participant ShippingAddressController
participant ModelDto
participant RequestValidation
participant ShippingAddressService
participant QueryUtil
participant ShippingAddressModel

database MongoDB

' Step 1
    activate Client
    Client -> ShippingAddressController: GET /api/shipping-address/get-shipping-address
    activate ShippingAddressController

' Step 4
group Validation Flow
    ShippingAddressController -> RequestValidation: validateSchema(GetListShippingAddressDto)
    activate RequestValidation
    alt validation error
        RequestValidation --x RequestValidation: throw HttpException(400)
        RequestValidation --x ShippingAddressController: throw HttpException(400)
        ShippingAddressController -->> Client: HTTP 400 Bad Request
    end
    RequestValidation -->> ShippingAddressController: return valid data
    deactivate RequestValidation
end

break
break


' Step 5
group Business Logic Flow
    ShippingAddressController -> ShippingAddressService: countAllShippingAddressService(filters)
    activate ShippingAddressService
    ShippingAddressService -> ShippingAddressModel: countDocuments(filters)
    activate ShippingAddressModel
    ShippingAddressModel -> MongoDB: query count
    activate MongoDB

    alt count fail 
        MongoDB --x ShippingAddressModel: throw Error
        ShippingAddressModel --x ShippingAddressService: throw Error
        ShippingAddressService --x ShippingAddressController: throw Error
        ShippingAddressController -->> Client: HTTP 500 Server Error
    end

    MongoDB -->> ShippingAddressModel: return totalCount
    deactivate MongoDB
    ShippingAddressModel -->> ShippingAddressService: return totalCount
    deactivate ShippingAddressModel
    ShippingAddressService -->> ShippingAddressController: return totalCount
    deactivate ShippingAddressService
    ShippingAddressController -> ShippingAddressService: getAllShippingAddressService()
    activate ShippingAddressService
    ShippingAddressService -> QueryUtil: extendQueryOptionsWithPagination()
    activate QueryUtil
    QueryUtil -> ShippingAddressService: return options
    deactivate QueryUtil
    ShippingAddressService -> QueryUtil: extendQueryOptionsWithSort()
    activate QueryUtil
    QueryUtil -> ShippingAddressService: return options
    deactivate QueryUtil
    ShippingAddressService -> ShippingAddressModel: find(filters, options)
    activate ShippingAddressModel
    ShippingAddressModel -> MongoDB: query select
    activate MongoDB

    alt select fail
        MongoDB --x ShippingAddressModel: throw Error
        ShippingAddressModel --x ShippingAddressService: throw Error
        ShippingAddressService --x ShippingAddressController: throw Error
        ShippingAddressController -->> Client: HTTP 500 Server Error
    end

    MongoDB -->> ShippingAddressModel: return shippingAddresses
    deactivate MongoDB
    ShippingAddressModel -->> ShippingAddressService: return shippingAddresses
    deactivate ShippingAddressModel
    ShippingAddressService -->> ShippingAddressController: return shippingAddresses
    deactivate ShippingAddressService
    

end

group Transform data response
    ShippingAddressController -> ModelDto: newList(ShippingAddressDto)
    activate ModelDto
    ModelDto -->> ShippingAddressController: return ShippingAddressDto
    deactivate ModelDto
ShippingAddressController --> Client: HTTP 200 Success
deactivate ShippingAddressController
end

@enduml