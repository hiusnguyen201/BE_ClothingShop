@startuml View User Profile

actor Client
participant AccountController
participant ModelDto
participant AuthService
participant UserModel
database MongoDB

activate Client
Client -> AccountController: GET /api/account/view-profile
activate AccountController

group Authentication Flow
    AccountController -> AuthService: validateAuthToken(token)
    activate AuthService
    
    alt invalid token
        AuthService --x AuthService: throw HttpException(401)
        AuthService --x AccountController: throw HttpException(401)
        AccountController -->> Client: HTTP 401 Unauthorized
    end

    AuthService -> AccountController: return userData
    deactivate AuthService
end

group Business Logic Flow
    AccountController -> UserModel: findById(userId)
    activate UserModel
    UserModel -> MongoDB: query select
    activate MongoDB

    alt query fail
        MongoDB --x UserModel: throw Error
        UserModel --x AccountController: throw Error
        AccountController -->> Client: HTTP 500 Server Error
    else user not found
        MongoDB -->> UserModel: return null
        UserModel -->> AccountController: return null
        AccountController -->> Client: HTTP 404 Not Found
    end

    MongoDB -->> UserModel: return user
    deactivate MongoDB
    UserModel -->> AccountController: return user
    deactivate UserModel
end

group Transform data
    AccountController -> ModelDto: new(UserDto)
    activate ModelDto
    ModelDto -> AccountController: return userDto
    deactivate ModelDto

    AccountController --> Client: HTTP 200 Success
    deactivate AccountController
end

deactivate Client

@enduml