@startuml View Detail Product

actor Client


participant ProductsController
participant ModelDto
participant RequestValidation
participant ProductsService
participant ProductModel

database MongoDB

' Step 1

    activate Client
    Client -> ProductsController: GET /api/products/get-product-by-id/:productId
    activate ProductsController

group Validation Flow
    ProductsController -> RequestValidation: validateSchema(GetProductDto)
    activate RequestValidation
    alt validation error
        RequestValidation --x RequestValidation: throw HttpException(400)
        RequestValidation --x ProductsController: throw HttpException(400)
        ProductsController -->> Client: HTTP 400 Bad Request
    end
    RequestValidation -->> ProductsController: return valid data
    deactivate RequestValidation
end

break
break


' Step 5
group Business Logic Flow
    activate ProductsController
    ProductsController -> ProductsService: getProductByIdService(productId)
    activate ProductsService
    ProductsService -> ProductModel: findOne(filter)
    activate ProductModel
    ProductModel -> MongoDB: query select
    activate MongoDB

    alt select fail
        MongoDB --x ProductModel: throw Error
        ProductModel --x ProductsService: throw Error
        ProductsService --x ProductsController: throw Error
        ProductsController -->> Client: HTTP 404 Not Found
    else product not found
        MongoDB -->> ProductModel: return null
        ProductModel -->> ProductsService: return null
        ProductsService -->> ProductsController: return null
        ProductsController --x ProductsController: throw(HttpException(404))
        ProductsController -->> Client: HTTP 404 Not Found
    end

    MongoDB -->> ProductModel: return product
    deactivate MongoDB
    ProductModel -->> ProductsService: return product
    deactivate ProductModel
    ProductsService -->> ProductsController: return product
    deactivate ProductsService
    
end

group Transform data response
    ProductsController -> ModelDto: newList(ProductDto)
    activate ModelDto
    ModelDto -->> ProductsController: return ProductDto 
    deactivate ModelDto
    ProductsController --> Client: HTTP 200 Success
    deactivate ProductsController
end



@enduml