@startuml Details Order

actor Client

participant OrdersController
participant ModelDto
participant RequestValidation
participant OrdersService
participant GhnService
participant GhnAPI
participant OrderModel

database MongoDB

' Step 1
    activate Client
    Client -> OrdersController: GET /api/orders/get-order-by-id/:orderId
    activate OrdersController

' Step 4
group Validation Flow
    OrdersController -> RequestValidation: validateSchema(GetOrderDto)
    activate RequestValidation
    
    alt validation error
        RequestValidation --x RequestValidation: throw HttpException(400)
        RequestValidation --x OrdersController: throw HttpException(400)
        OrdersController -->> Client: HTTP 400 Bad Request
    end

    RequestValidation -> OrdersController: return valid data
    deactivate RequestValidation
end

break
break


' Step 5
group Business Logic Flow
    OrdersController -> OrdersService: getOrderByIdService(orderId)
    activate OrdersService
    OrdersService -> OrderModel: findOne(filters)
    activate OrderModel
    OrderModel -> MongoDB: query select 
    activate MongoDB

    alt select false
        MongoDB --x OrderModel:throw Error
        OrderModel --x OrdersService:throw Error
        OrdersService --x OrdersController: throw Error
        OrdersController -->> Client: HTTP 500  Server Error

    else order not found
        MongoDB -->> OrderModel: return null
        OrderModel -->> OrdersService: return null
        OrdersService -->> OrdersController: return null
        OrdersController --x OrdersController: throw(HttpException(404))
        OrdersController -->> Client: HTTP 404 not found
    end

    MongoDB -->> OrderModel: return order
    deactivate MongoDB
    OrderModel -->> OrdersService: return order
    deactivate OrderModel
    OrdersService -->> OrdersController: return order
    deactivate OrdersService

    OrdersController -> GhnService: getTrackingDetailsService()
    activate GhnService
    GhnService -> GhnAPI: POST /v2/shipping-order/detail
    activate GhnAPI

    alt post fail
        GhnAPI -->> GhnService: return null
        GhnService -->> OrdersController: return null
        OrdersController --x OrdersController: throw(HttpException(404))
        OrdersController -->> Client: HTTP 404 Not Found
    end

    GhnAPI -->> GhnService: return trackingLog
    deactivate GhnAPI
    GhnService --> OrdersController: return trackingLog
    deactivate GhnService

end

group Transform data response
    OrdersController -> ModelDto: new(OrderDto)
    activate ModelDto
    ModelDto -->> OrdersController: return OrderDto 
    deactivate ModelDto

OrdersController --> Client: HTTP 200 Success
deactivate OrdersController
end

@enduml