@startuml Remove Customer

actor Client

participant CustomersController
participant RequestValidation
participant UserService 
participant UserModel

database MongoDB

' Step 1
    activate Client
    Client -> CustomersController: DELETE /api/customers/remove-customer-by-id/:customerId
    activate CustomersController

break
break

' Step 4
group Validation Flow
    CustomersController -> RequestValidation: validateSchema(GetCustomerDto)
    activate RequestValidation
    alt validation error
        RequestValidation --x RequestValidation: throw HttpException(400)
        RequestValidation --x CustomersController: throw HttpException(400)
        CustomersController -->> Client: HTTP 400 Bad Request
    end
    RequestValidation -->> CustomersController: return valid data
    deactivate RequestValidation
    
end

break
break

' Step 5
group Business Logic Flow
    CustomersController -> UserService: getUserByIdService(customerId)
    activate UserService
    
    UserService -> UserModel: findOne(filters)
    activate UserModel
    UserModel -> MongoDB: query select
    activate MongoDB

    alt user not found
        MongoDB -->> UserModel: return null
        UserModel -->> UserService: return null
        UserService -->> CustomersController: return null
        CustomersController --x CustomersController: throw(HttpException(404))
        CustomersController -->> Client: HTTP 404 Not Found

        else select fail
        MongoDB --x UserModel: throw error
        UserModel --x UserService: throw error
        UserService --x CustomersController: throw error
        CustomersController -->> Client: HTTP 500 Internal Server Error
    end

    MongoDB -->> UserModel: return user
    deactivate MongoDB
    UserModel -->> UserService: return user
    deactivate UserModel
    UserService -->> CustomersController: return user
    deactivate UserService
    CustomersController -> UserService: removeUserByIdService(customerId)
    activate UserService
    UserService -> UserModel: findByIdAndSoftDelete(id)
    activate UserModel
    UserModel -> MongoDB: query update
    activate MongoDB

    alt Update fail
        MongoDB --x UserModel: throw error
        UserModel --x UserService: throw error
        UserService --x CustomersController: throw error
        CustomersController -->> Client: HTTP 500 Internal Server Error
    end

    MongoDB -->> UserModel: return user
    deactivate MongoDB
    UserModel -->> UserService: return user
    deactivate UserModel
    UserService -->> CustomersController: return user
    deactivate UserService

    
end

CustomersController --> Client: HTTP 200 Success
deactivate CustomersController


@enduml