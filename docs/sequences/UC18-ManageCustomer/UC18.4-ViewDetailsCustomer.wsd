@startuml View Details Customer

actor Client

participant CustomersController
participant ModelDto
participant RequestValidation
participant QueryUtil
participant UserService 
participant UserModel

database MongoDB

' Step 1
    activate Client
    Client -> CustomersController: GET /api/customers/get-customer-by-id/:customerId
    activate CustomersController

break
break



' Step 4
group Validation Flow
    CustomersController -> RequestValidation: validateSchema(GetCustomerDto)
       activate RequestValidation
    alt validation error
        RequestValidation --x RequestValidation: throw HttpException(400)
        RequestValidation --x CustomersController: throw HttpException(400)
        CustomersController -->> Client: HTTP 400 Bad Request
    end
    RequestValidation -->> CustomersController: return valid data
    deactivate RequestValidation
end

break
break


' step 5
group Business Logic Flow
    CustomersController -> UserService: getUserByIdService(customerId)
    activate UserService

    UserService -> UserModel: findOne(filters)
    activate UserModel
    UserModel -> MongoDB: query select
    activate MongoDB

    alt select fail 
        MongoDB --x UserModel: throw Error
        UserModel --x UserService: throw Error
        UserService --x CustomersController: throw Error
        CustomersController -->> Client: HTTP 500 Internal Server Error

    else user not found
        MongoDB -->> UserModel: return null
        UserModel -->> UserService: return null
        UserService -->> CustomersController: return null
        CustomersController --x CustomersController: throw(HttpException(404))
        CustomersController -->> Client: HTTP 404 Not Found
    end

    MongoDB -->> UserModel: return user
    deactivate MongoDB
    UserModel -->> UserService: return user
    deactivate UserModel
    UserService -->> CustomersController: return user
    deactivate UserService

end
break
break

group Transform data response
    CustomersController -> ModelDto: new(CustomerDto)
    activate ModelDto
    ModelDto -->> CustomersController: return CustomerDto 
    deactivate ModelDto
    
CustomersController --> Client: HTTP 200 Success
deactivate CustomersController
end



@enduml