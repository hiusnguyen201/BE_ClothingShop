@startuml Add Item to Cart

actor Client

participant CartsController
participant ModelDto
participant RequestValidation
participant CartsService
participant ProductVariantsService
participant ProductVariantModel

database MongoDB
database RedisClient

' Step 1
    activate Client
    Client -> CartsController: POST /api/carts/add-item
    activate CartsController

' Step 4
group Validation Flow
    CartsController -> RequestValidation: validateSchema(AddToCartDto)
    activate RequestValidation
    alt validation error
        RequestValidation --x RequestValidation: throw HttpException(400)
        RequestValidation --x CartsController: throw HttpException(400)
        CartsController -->> Client: HTTP 400 Bad Request
    end
    RequestValidation -->> CartsController: return valid data
    deactivate RequestValidation
end


' Step 5
group Business Logic Flow
    CartsController -> ProductVariantsService: getProductVariantByIdService(productVariantId)
    activate ProductVariantsService
    
    ProductVariantsService -> ProductVariantModel: findOne(filter)
    activate ProductVariantModel
    ProductVariantModel -> MongoDB: query select
    activate MongoDB

    alt select fail
        MongoDB --x ProductVariantModel: throw Error
        ProductVariantModel --x ProductVariantsService: throw Error
        ProductVariantsService --x CartsController: throw Error
        CartsController --x CartsController: catch Error and next(Error)
        CartsController ->> CartsController: handleError(Error)
        activate CartsController
        CartsController -->> Client: HTTP 500 Server Error
        deactivate CartsController
    else product variant not found
        MongoDB -->> ProductVariantModel: return null
        ProductVariantModel -->> ProductVariantsService: return null
        ProductVariantsService -->> CartsController: return null
        CartsController --x CartsController: Throw(HttpException(404))
        CartsController -->> Client: HTTP 404 Not Found
    end
    
    MongoDB -->> ProductVariantModel: return productVariant
    deactivate MongoDB
    ProductVariantModel -->> ProductVariantsService: return productVariant
    deactivate ProductVariantModel
    ProductVariantsService -->> CartsController: return productVariant
    deactivate ProductVariantsService
    CartsController -> CartsService: addToCartService()
    activate CartsService
    CartsService -> RedisClient: hSet()
    activate RedisClient
    RedisClient -->> CartsService: return success
    deactivate RedisClient
    CartsService -->> CartsController: return success
    deactivate CartsService
    

end

group Transform data response
    CartsController -> ModelDto: new(CartDto)
    activate ModelDto
    ModelDto -->> CartsController: return cartsDto
    deactivate ModelDto
CartsController --> Client: HTTP 200 Success
deactivate CartsController
end

@enduml